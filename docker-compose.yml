services:

  mongo-db:
    image: mongo:6.0.6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_PASSWORD}
    volumes:
      - ./DevOps-Proyect-Bakend/mongo:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.adminCommand(\"ping\")' -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-net

  devops-backend:
    build:
      context: ./DevOps-Proyect-Bakend
      dockerfile: Dockerfile
      args:
        PORT: ${PORT}
        JWT_SEED: ${JWT_SEED}
        MONGO_URL: ${MONGO_URL}
        MONGO_DB_NAME: ${MONGO_DB_NAME}
    image: devops-backend
    depends_on:
      mongo-db:
        condition: service_healthy
    ports:
      - "3001:3001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3001/"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      app-net:
        aliases:
          - backend

  devops-frontend:
    build:
      context: ./DevOps-Proyect
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
    image: devops-frontend
    depends_on:
      devops-backend:
        condition: service_healthy
    ports:
      - "3000:80"
    restart: unless-stopped
    networks:
      - app-net

networks:
  app-net:
    driver: bridge